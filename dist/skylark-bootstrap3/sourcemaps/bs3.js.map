{"version":3,"sources":["bs3.js"],"names":["define","skylark","langx","browser","eventer","noder","geom","$","widgets","ui","bs3","CONST","BACKSPACE_KEYCODE","COMMA_KEYCODE","DELETE_KEYCODE","DOWN_ARROW_KEYCODE","ENTER_KEYCODE","TAB_KEYCODE","UP_ARROW_KEYCODE","isShiftHeld","e","shiftKey","isKey","keyCode","isBackspaceKey","isDeleteKey","isTabKey","isUpArrow","isDownArrow","ENCODED_REGEX","cleanInput","questionableMarkup","test","html","text","mixin","WidgetBase","Widget","inherit","klassName"],"mappings":";;;;;;;AAAAA,QACE,wBACA,sBACA,wBACA,wBACA,sBACA,qBACA,sBACA,yBACA,SAASC,EAAQC,EAAMC,EAAQC,EAAQC,EAAMC,EAAKC,EAAEC,GACrD,GAAIC,GAAKR,EAAQQ,GAAKR,EAAQQ,OAC7BC,EAAMD,EAAGC,OAUNC,GACHC,kBAAmB,EACnBC,cAAe,IACfC,eAAgB,GAChBC,mBAAoB,GACpBC,cAAe,GACfC,YAAa,EACbC,iBAAkB,IAGfC,EAAc,SAAsBC,GAAK,MAAOA,GAAEC,YAAa,GAE/DC,EAAQ,SAAgBC,GAC3B,MAAO,UAA0BH,GAChC,MAAOA,GAAEG,UAAYA,IAInBC,EAAiBF,EAAMX,EAAMC,mBAC7Ba,EAAcH,EAAMX,EAAMG,gBAC1BY,EAAWJ,EAAMX,EAAMM,aACvBU,EAAYL,EAAMX,EAAMO,kBACxBU,EAAcN,EAAMX,EAAMI,oBAE1Bc,EAAgB,WAIhBC,EAAa,SAAqBC,GAErC,KAAOF,EAAcG,KAAKD,IACzBA,EAAqBxB,EAAE,OAAO0B,KAAKF,GAAoBG,MAIxD,OAAO3B,GAAE,OAAO2B,KAAKH,GAAoBE,OAM1C/B,GAAMiC,MAAMzB,GACXC,MAAOA,EACPmB,WAAYA,EACZN,eAAgBA,EAChBC,YAAaA,EACbN,YAAaA,EACbO,SAAUA,EACVC,UAAWA,EACXC,YAAaA,GAKd,IAAIQ,GAAa5B,EAAQ6B,OAAOC,SACzBC,UAAW,cAQlB,OAJArC,GAAMiC,MAAMzB,GACX0B,WAAaA,IAGP1B","file":"../bs3.js","sourcesContent":["define([\r\n  \"skylark-utils/skylark\",\r\n  \"skylark-utils/langx\",\r\n  \"skylark-utils/browser\",\r\n  \"skylark-utils/eventer\",\r\n  \"skylark-utils/noder\",\r\n  \"skylark-utils/geom\",\r\n  \"skylark-utils/query\",\r\n  \"skylark-utils/widgets\"\r\n],function(skylark,langx,browser,eventer,noder,geom,$,widgets){\r\n\tvar ui = skylark.ui = skylark.ui || {}, \r\n\t\tbs3 = ui.bs3 = {};\r\n\r\n/*---------------------------------------------------------------------------------*/\r\n\t/*\r\n\t * Fuel UX utilities.js\r\n\t * https://github.com/ExactTarget/fuelux\r\n\t *\r\n\t * Copyright (c) 2014 ExactTarget\r\n\t * Licensed under the BSD New license.\r\n\t */\r\n\tvar CONST = {\r\n\t\tBACKSPACE_KEYCODE: 8,\r\n\t\tCOMMA_KEYCODE: 188, // `,` & `<`\r\n\t\tDELETE_KEYCODE: 46,\r\n\t\tDOWN_ARROW_KEYCODE: 40,\r\n\t\tENTER_KEYCODE: 13,\r\n\t\tTAB_KEYCODE: 9,\r\n\t\tUP_ARROW_KEYCODE: 38\r\n\t};\r\n\r\n\tvar isShiftHeld = function isShiftHeld (e) { return e.shiftKey === true; };\r\n\r\n\tvar isKey = function isKey (keyCode) {\r\n\t\treturn function compareKeycodes (e) {\r\n\t\t\treturn e.keyCode === keyCode;\r\n\t\t};\r\n\t};\r\n\r\n\tvar isBackspaceKey = isKey(CONST.BACKSPACE_KEYCODE);\r\n\tvar isDeleteKey = isKey(CONST.DELETE_KEYCODE);\r\n\tvar isTabKey = isKey(CONST.TAB_KEYCODE);\r\n\tvar isUpArrow = isKey(CONST.UP_ARROW_KEYCODE);\r\n\tvar isDownArrow = isKey(CONST.DOWN_ARROW_KEYCODE);\r\n\r\n\tvar ENCODED_REGEX = /&[^\\s]*;/;\r\n\t/*\r\n\t * to prevent double encoding decodes content in loop until content is encoding free\r\n\t */\r\n\tvar cleanInput = function cleanInput (questionableMarkup) {\r\n\t\t// check for encoding and decode\r\n\t\twhile (ENCODED_REGEX.test(questionableMarkup)) {\r\n\t\t\tquestionableMarkup = $('<i>').html(questionableMarkup).text();\r\n\t\t}\r\n\r\n\t\t// string completely decoded now encode it\r\n\t\treturn $('<i>').text(questionableMarkup).html();\r\n\t};\r\n\r\n\r\n\r\n\r\n\tlangx.mixin(bs3, {\r\n\t\tCONST: CONST,\r\n\t\tcleanInput: cleanInput,\r\n\t\tisBackspaceKey: isBackspaceKey,\r\n\t\tisDeleteKey: isDeleteKey,\r\n\t\tisShiftHeld: isShiftHeld,\r\n\t\tisTabKey: isTabKey,\r\n\t\tisUpArrow: isUpArrow,\r\n\t\tisDownArrow: isDownArrow\r\n\t});\r\n\r\n/*---------------------------------------------------------------------------------*/\r\n\r\n\tvar WidgetBase = widgets.Widget.inherit({\r\n        klassName: \"WidgetBase\",\r\n    });\r\n\r\n\r\n\tlangx.mixin(bs3, {\r\n\t\tWidgetBase : WidgetBase\r\n\t});\r\n\r\n\treturn bs3;\r\n});\r\n"]}