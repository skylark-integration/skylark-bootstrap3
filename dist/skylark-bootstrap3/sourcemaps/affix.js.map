{"version":3,"sources":["affix.js"],"names":["define","langx","browser","eventer","noder","geom","$","plugins","bs3","Affix","Plugin","inherit","klassName","pluginName","_construct","element","options","this","mixin","DEFAULTS","$target","target","on","proxy","checkPosition","checkPositionWithEventLoop","$element","affixed","unpin","pinnedOffset","getState","scrollHeight","height","offsetTop","offsetBottom","scrollTop","position","offset","targetHeight","top","initializing","colliderTop","getPinnedOffset","removeClass","RESET","addClass","setTimeout","is","bottom","Math","max","document","body","affix","css","affixType","e","create","trigger","isDefaultPrevented","replace","VERSION","window","register"],"mappings":"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","file":"../affix.js","sourcesContent":["define([\n  \"skylark-langx/langx\",\n  \"skylark-domx-browser\",\n  \"skylark-domx-eventer\",\n  \"skylark-domx-noder\",\n  \"skylark-domx-geom\",\n  \"skylark-domx-query\",\n  \"skylark-domx-plugins\",\n  \"./bs3\"\n],function(langx,browser,eventer,noder,geom,$,plugins,bs3){\n\n\n/* ========================================================================\n * Bootstrap: affix.js v3.3.7\n * http://getbootstrap.com/javascript/#affix\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n  'use strict';\n\n  // AFFIX CLASS DEFINITION\n  // ======================\n\n  var Affix = bs3.Affix = plugins.Plugin.inherit({\n        klassName: \"Affix\",\n\n        pluginName : \"bs3.affix\",\n\n        _construct : function(element,options) {\n          this.options = langx.mixin({}, Affix.DEFAULTS, options)\n\n          this.$target = $(this.options.target)\n            .on('scroll.bs.affix.data-api', langx.proxy(this.checkPosition, this))\n            .on('click.bs.affix.data-api',  langx.proxy(this.checkPositionWithEventLoop, this))\n\n          this.$element     = $(element)\n          this.affixed      = null;\n          this.unpin        = null;\n          this.pinnedOffset = null;\n\n          this.checkPosition();\n        },\n\n        getState : function (scrollHeight, height, offsetTop, offsetBottom) {\n          var scrollTop    = this.$target.scrollTop()\n          var position     = this.$element.offset()\n          var targetHeight = this.$target.height()\n\n          if (offsetTop != null && this.affixed == 'top') return scrollTop < offsetTop ? 'top' : false\n\n          if (this.affixed == 'bottom') {\n            if (offsetTop != null) return (scrollTop + this.unpin <= position.top) ? false : 'bottom'\n            return (scrollTop + targetHeight <= scrollHeight - offsetBottom) ? false : 'bottom'\n          }\n\n          var initializing   = this.affixed == null\n          var colliderTop    = initializing ? scrollTop : position.top\n          var colliderHeight = initializing ? targetHeight : height\n\n          if (offsetTop != null && scrollTop <= offsetTop) return 'top'\n          if (offsetBottom != null && (colliderTop + colliderHeight >= scrollHeight - offsetBottom)) return 'bottom'\n\n          return false\n        },\n\n        getPinnedOffset : function () {\n          if (this.pinnedOffset) return this.pinnedOffset\n          this.$element.removeClass(Affix.RESET).addClass('affix')\n          var scrollTop = this.$target.scrollTop()\n          var position  = this.$element.offset()\n          return (this.pinnedOffset = position.top - scrollTop)\n        },\n\n        checkPositionWithEventLoop : function () {\n          setTimeout(langx.proxy(this.checkPosition, this), 1)\n        },\n\n        checkPosition : function () {\n          if (!this.$element.is(':visible')) return\n\n          var height       = this.$element.height()\n          var offset       = this.options.offset\n          var offsetTop    = offset.top\n          var offsetBottom = offset.bottom\n          var scrollHeight = Math.max($(document).height(), $(document.body).height())\n\n          if (typeof offset != 'object')         offsetBottom = offsetTop = offset\n          if (typeof offsetTop == 'function')    offsetTop    = offset.top(this.$element)\n          if (typeof offsetBottom == 'function') offsetBottom = offset.bottom(this.$element)\n\n          var affix = this.getState(scrollHeight, height, offsetTop, offsetBottom)\n\n          if (this.affixed != affix) {\n            if (this.unpin != null) this.$element.css('top', '')\n\n            var affixType = 'affix' + (affix ? '-' + affix : '')\n            var e         = eventer.create(affixType + '.bs.affix')\n\n            this.$element.trigger(e)\n\n            if (e.isDefaultPrevented()) return\n\n            this.affixed = affix\n            this.unpin = affix == 'bottom' ? this.getPinnedOffset() : null\n\n            this.$element\n              .removeClass(Affix.RESET)\n              .addClass(affixType)\n              .trigger(affixType.replace('affix', 'affixed') + '.bs.affix')\n          }\n\n          if (affix == 'bottom') {\n            this.$element.offset({\n              top: scrollHeight - height - offsetBottom\n            })\n          }\n        }\n  });\n\n\n  Affix.VERSION  = '3.3.7'\n\n  Affix.RESET    = 'affix affix-top affix-bottom'\n\n  Affix.DEFAULTS = {\n    offset: 0,\n    target: window\n  }\n\n\n  /*\n  // AFFIX PLUGIN DEFINITION\n  // =======================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.affix')\n      var options = typeof option == 'object' && option\n\n      if (!data) $this.data('bs.affix', (data = new Affix(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.affix\n\n  $.fn.affix             = Plugin;\n  $.fn.affix.Constructor = Affix;\n\n\n  // AFFIX NO CONFLICT\n  // =================\n\n  $.fn.affix.noConflict = function () {\n    $.fn.affix = old\n    return this\n  }\n\n\n  return $.fn.affix;\n  */\n\n  plugins.register(Affix,\"affix\");\n\n  return Affix;\n});\n"]}