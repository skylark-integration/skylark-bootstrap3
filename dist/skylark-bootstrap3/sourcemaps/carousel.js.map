{"version":3,"sources":["carousel.js"],"names":["define","langx","browser","eventer","noder","geom","$","plugins","bs3","Carousel","Plugin","inherit","klassName","pluginName","options","interval","pause","wrap","keyboard","selectors","controls","toggle","prev","next","close","playPause","indicators","container","slides","item","_construct","element","mixin","data","this","overrided","$element","$indicators","find","paused","sliding","$active","$items","self","embeded","on","proxy","keydown","document","documentElement","cycle","e","$this","slide","attr","slideIndex","to","preventDefault","test","target","tagName","which","clearInterval","setInterval","getItemIndex","parent","children","index","getItemForDirection","direction","active","activeIndex","length","itemIndex","eq","pos","that","one","support","transition","trigger","end","type","$next","isCycling","hasClass","relatedTarget","slideEvent","create","isDefaultPrevented","removeClass","$nextIndicator","addClass","slidEvent","offsetWidth","join","setTimeout","emulateTransitionEnd","VERSION","TRANSITION_DURATION","register","action"],"mappings":"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","file":"../carousel.js","sourcesContent":["define([\n    \"skylark-langx/langx\",\n    \"skylark-domx-browser\",\n    \"skylark-domx-eventer\",\n    \"skylark-domx-noder\",\n    \"skylark-domx-geom\",\n    \"skylark-domx-query\",\n    \"skylark-domx-plugins\",\n    \"./bs3\",\n    \"./transition\"\n], function(langx, browser, eventer, noder, geom, $, plugins, bs3) {\n\n    /* ========================================================================\n     * Bootstrap: carousel.js v3.3.7\n     * http://getbootstrap.com/javascript/#carousel\n     * ========================================================================\n     * Copyright 2011-2016 Twitter, Inc.\n     * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n     * ======================================================================== */\n\n    'use strict';\n\n    // CAROUSEL CLASS DEFINITION\n    // =========================\n\n    var Carousel = bs3.Carousel = plugins.Plugin.inherit({\n        klassName: \"Carousel\",\n\n        pluginName: \"bs3.carousel\",\n\n        options : {\n            interval: 5000,\n            pause: 'hover',\n            wrap: true,\n            keyboard: true,\n\n            selectors :{\n                controls : {\n                 // The class for the \"toggle\" control:\n                  toggle: '.toggle',\n                  // The class for the \"prev\" control:\n                  prev: '.prev',\n                  // The class for the \"next\" control:\n                  next: '.next',\n                  // The class for the \"close\" control:\n                  close: '.close',\n                  // The class for the \"play-pause\" toggle control:\n                  playPause: '.play-pause'\n                },\n                indicators : {\n                    container : \".carousel-indicators\"  \n                },\n                slides : {\n                    container : \"\",\n                    item : \".item\" \n                }\n            }\n\n\n        },\n\n        _construct: function(element, options) {\n            options = langx.mixin({}, $(element).data(), options);\n            //this.options = options\n            this.overrided(element,options);\n\n            this.$element = $(element)\n            this.$indicators = this.$element.find(this.options.selectors.indicators.container); //'.carousel-indicators'\n            this.paused = null\n            this.sliding = null\n            this.interval = null\n            this.$active = null\n            this.$items = null\n\n            var self = this;\n            if (!this.options.embeded) {\n                this.options.keyboard && this.$element.on('keydown.bs.carousel', langx.proxy(this.keydown, this))\n\n                this.options.pause == 'hover' && !('ontouchstart' in document.documentElement) && this.$element\n                    .on('mouseenter.bs3.carousel', langx.proxy(this.pause, this))\n                    .on('mouseleave.bs3.carousel', langx.proxy(this.cycle, this));\n\n                this.$element.on(\"click.bs3.carousel.data-api\", \"[data-slide],[data-slide-to]\", function(e) {\n                    var $this = $(this),\n                        slide = $this.attr('data-slide'),\n                        slideIndex = $this.attr('data-slide-to');\n\n                    if (slide == \"prev\") {\n                        self.prev();\n                    } else if (slide == \"next\") {\n                        self.next();\n                    } else  if (slideIndex) {\n                        self.to(slideIndex);\n                    }\n                    e.preventDefault();\n                });\n            }\n        },\n\n        keydown : function(e) {\n            if (/input|textarea/i.test(e.target.tagName)) return\n            switch (e.which) {\n                case 37:\n                    this.prev();\n                    break\n                case 39:\n                    this.next();\n                    break\n                default:\n                    return\n            }\n\n            e.preventDefault()\n        },\n\n        cycle : function(e) {\n            e || (this.paused = false)\n\n            this.interval && clearInterval(this.interval)\n\n            this.options.interval &&\n                !this.paused &&\n                (this.interval = setInterval(langx.proxy(this.next, this), this.options.interval))\n\n            return this\n        },\n\n        getItemIndex : function(item) {\n            this.$items = item.parent().children(this.options.selectors.slides.item);//'.item' \n            return this.$items.index(item || this.$active)\n        },\n\n        getItemForDirection : function(direction, active) {\n            var activeIndex = this.getItemIndex(active)\n            var willWrap = (direction == 'prev' && activeIndex === 0) ||\n                (direction == 'next' && activeIndex == (this.$items.length - 1))\n            if (willWrap && !this.options.wrap) return active\n            var delta = direction == 'prev' ? -1 : 1\n            var itemIndex = (activeIndex + delta) % this.$items.length\n            return this.$items.eq(itemIndex)\n        },\n\n        to : function(pos) {\n            var that = this\n            var activeIndex = this.getItemIndex(this.$active = this.$element.find(this.options.selectors.slides.item+\".active\"));//'.item.active'\n\n            if (pos > (this.$items.length - 1) || pos < 0) return\n\n            if (this.sliding) return this.$element.one('slid.bs.carousel', function() { that.to(pos) }) // yes, \"slid\"\n            if (activeIndex == pos) return this.pause().cycle()\n\n            return this.slide(pos > activeIndex ? 'next' : 'prev', this.$items.eq(pos))\n        },\n\n        pause : function(e) {\n            e || (this.paused = true)\n\n            if (this.$element.find(this.options.selectors.controls.next + \",\"+ this.options.selectors.controls.prev).length && browser.support.transition) { //.next,.prev\n                this.$element.trigger(browser.support.transition.end)\n                this.cycle(true)\n            }\n\n            this.interval = clearInterval(this.interval)\n\n            return this\n        },\n\n        next : function() {\n            if (this.sliding) return\n            return this.slide('next')\n        },\n\n        prev : function() {\n            if (this.sliding) return\n            return this.slide('prev')\n        },\n\n        slide : function(type, next) {\n            var $active = this.$element.find(this.options.selectors.slides.item+\".active\");//'.item.active'\n            var $next = next || this.getItemForDirection(type, $active)\n            var isCycling = this.interval\n            var direction = type == 'next' ? 'left' : 'right'\n            var that = this\n\n            if ($next.hasClass('active')) return (this.sliding = false)\n\n            var relatedTarget = $next[0]\n            var slideEvent = eventer.create('slide.bs.carousel', {\n                relatedTarget: relatedTarget,\n                direction: direction\n            })\n            this.$element.trigger(slideEvent)\n            if (slideEvent.isDefaultPrevented()) return\n\n            this.sliding = true\n\n            isCycling && this.pause()\n\n            if (this.$indicators.length) {\n                this.$indicators.find('.active').removeClass('active')\n                var $nextIndicator = $(this.$indicators.children()[this.getItemIndex($next)])\n                $nextIndicator && $nextIndicator.addClass('active')\n            }\n\n            var slidEvent = eventer.create('slid.bs.carousel', { relatedTarget: relatedTarget, direction: direction }) // yes, \"slid\"\n            if (browser.support.transition && this.$element.hasClass('slide')) {\n                $next.addClass(type)\n                $next[0].offsetWidth // force reflow\n                $active.addClass(direction)\n                $next.addClass(direction)\n                $active\n                    .one('transitionEnd', function() {\n                        $next.removeClass([type, direction].join(' ')).addClass('active')\n                        $active.removeClass(['active', direction].join(' '))\n                        that.sliding = false\n                        setTimeout(function() {\n                            that.$element.trigger(slidEvent)\n                        }, 0)\n                    })\n                    .emulateTransitionEnd()\n            } else {\n                $active.removeClass('active')\n                $next.addClass('active')\n                this.sliding = false\n                this.$element.trigger(slidEvent)\n            }\n\n            isCycling && this.cycle()\n\n            return this\n        },\n\n    });\n\n    // var Carousel = function (element, options) {\n    // }\n\n    Carousel.VERSION = '3.3.7'\n\n    Carousel.TRANSITION_DURATION = 600\n\n\n\n\n    // CAROUSEL PLUGIN DEFINITION\n    // ==========================\n    /*\n    function Plugin(option) {\n        return this.each(function() {\n            var $this = $(this)\n            var wgt = $this.data('bs.carousel')\n            var options = langx.mixin({}, Carousel.DEFAULTS, $this.data(), typeof option == 'object' && option)\n            var action = typeof option == 'string' ? option : options.slide\n\n            if (!wgt) {\n                $this.data('bs.carousel', (wgt = new Carousel(this, options)));\n            }\n            if (typeof option == 'number') {\n                wgt.to(option);\n            } else if (action) {\n                wgt[action]()\n            } else if (options.interval) {\n                wgt.pause().cycle();\n            }\n        })\n    }\n    */\n    plugins.register(Carousel,\"carousel\",function(options){\n        //this -> plugin instance\n        var action = typeof options == 'string' ? options : options.slide\n        if (typeof options == 'number') {\n            this.to(options);\n        } else if (action) {\n            this[action]()\n        } else if (options.interval) {\n            this.pause().cycle();\n        }        \n    });\n\n    return Carousel;\n\n});"]}