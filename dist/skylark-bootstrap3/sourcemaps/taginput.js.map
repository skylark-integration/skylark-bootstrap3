{"version":3,"sources":["taginput.js"],"names":["define","langx","browser","eventer","noder","geom","$","plugins","bs3","defaultOptions","tagClass","item","focusClass","itemValue","toString","itemText","this","itemTitle","freeInput","addOnBlur","maxTags","undefined","maxChars","confirmKeys","delimiter","delimiterRegex","cancelConfirmKeysOnEmpty","onTagExists","$tag","hide","fadeIn","trimValue","allowDuplicates","triggerChange","TagsInput","Plugin","inherit","klassName","pluginName","_construct","element","options","objectItems","mixin","data","overrided","isInit","itemsArray","$element","isSelect","tagName","multiple","hasAttribute","placeholderText","attr","inputSize","Math","max","length","$container","$input","appendTo","before","build","add","dontPushVal","self","trim","match","remove","items","split","i","pushVal","existing","grep","maxInputLength","beforeItemAddEvent","create","cancel","trigger","push","htmlEncode","findInputWrapper","after","optionExists","encodeURIComponent","$option","append","addClass","typeahead","$existingTag","filter","other","beforeItemRemoveEvent","inArray","splice","removeClass","removeAll","pop","refresh","each","contents","nodeType","nodeValue","val","map","makeOptionItemFunction","makeOptionFunction","extend","source","query","process","processItems","texts","text","isFunction","success","then","Deferred","when","updater","matcher","toLowerCase","indexOf","sorter","sort","highlighter","regex","RegExp","replace","typeaheadjs","isArray","fn","apply","on","proxy","obj","datum","name","index","some","dataset","_index","valueKey","event","removeAttr","focus","focusin","focusout","target","$inputWrapper","which","doGetCaretPosition","prev","next","$prevTag","$nextTag","textLength","ceil","keyPressEvent","lookupList","found","maxLengthReached","keyCombination","alt","hasOwnProperty","altKey","shift","shiftKey","ctrl","ctrlKey","substr","preventDefault","closest","destroy","off","removeData","show","input","elt","container","parentNode","key","propertyName","value","tagsinput","arg1","arg2","arg3","results","retVal","Constructor","htmlEncodeContainer","html","oField","iCaretPos","document","selection","oSel","createRange","moveStart","selectionStart"],"mappings":"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","file":"../taginput.js","sourcesContent":["define([\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-plugins\",\r\n  \"./bs3\"\r\n],function(langx,browser,eventer,noder,geom,$,plugins,bs3){\r\n\r\n  \"use strict\";\r\n\r\n  var defaultOptions = {\r\n    tagClass: function(item) {\r\n      return 'label label-info';\r\n    },\r\n    focusClass: 'focus',\r\n    itemValue: function(item) {\r\n      return item ? item.toString() : item;\r\n    },\r\n    itemText: function(item) {\r\n      return this.itemValue(item);\r\n    },\r\n    itemTitle: function(item) {\r\n      return null;\r\n    },\r\n    freeInput: true,\r\n    addOnBlur: true,\r\n    maxTags: undefined,\r\n    maxChars: undefined,\r\n    confirmKeys: [13, 44],\r\n    delimiter: ',',\r\n    delimiterRegex: null,\r\n    cancelConfirmKeysOnEmpty: false,\r\n    onTagExists: function(item, $tag) {\r\n      $tag.hide().fadeIn();\r\n    },\r\n    trimValue: false,\r\n    allowDuplicates: false,\r\n    triggerChange: true\r\n  };\r\n\r\n\r\n  var TagsInput = bs3.TagsInput = plugins.Plugin.inherit({\r\n    klassName: \"TagsInput\",\r\n\r\n    pluginName : \"bs3.TagsInput\",\r\n\r\n  /**\r\n   * Constructor function\r\n   */\r\n    _construct : function(element, options) {\r\n      this.objectItems = options && options.itemValue;\r\n      options = langx.mixin({}, defaultOptions, $(element).data(), options)\r\n      this.overrided(element,options);\r\n\r\n      this.isInit = true;\r\n      this.itemsArray = [];\r\n\r\n\r\n      this.$element = $(element);\r\n      this.$element.hide();\r\n\r\n      this.isSelect = (element.tagName === 'SELECT');\r\n      this.multiple = (this.isSelect && element.hasAttribute('multiple'));\r\n      this.placeholderText = element.hasAttribute('placeholder') ? this.$element.attr('placeholder') : '';\r\n      this.inputSize = Math.max(1, this.placeholderText.length);\r\n\r\n      this.$container = $('<div class=\"bootstrap-tagsinput\"></div>');\r\n      this.$input = $('<input type=\"text\" placeholder=\"' + this.placeholderText + '\"/>').appendTo(this.$container);\r\n\r\n      this.$element.before(this.$container);\r\n\r\n      this.build();\r\n      this.isInit = false;\r\n    },\r\n\r\n\r\n    /**\r\n     * Adds the given item as a new tag. Pass true to dontPushVal to prevent\r\n     * updating the elements val()\r\n     */\r\n    add: function(item, dontPushVal, options) {\r\n      var self = this;\r\n\r\n      if (self.options.maxTags && self.itemsArray.length >= self.options.maxTags)\r\n        return;\r\n\r\n      // Ignore falsey values, except false\r\n      if (item !== false && !item)\r\n        return;\r\n\r\n      // Trim value\r\n      if (typeof item === \"string\" && self.options.trimValue) {\r\n        item = langx.trim(item);\r\n      }\r\n\r\n      // Throw an error when trying to add an object while the itemValue option was not set\r\n      if (typeof item === \"object\" && !self.objectItems)\r\n        throw(\"Can't add objects when itemValue option is not set\");\r\n\r\n      // Ignore strings only containg whitespace\r\n      if (item.toString().match(/^\\s*$/))\r\n        return;\r\n\r\n      // If SELECT but not multiple, remove current tag\r\n      if (self.isSelect && !self.multiple && self.itemsArray.length > 0)\r\n        self.remove(self.itemsArray[0]);\r\n\r\n      if (typeof item === \"string\" && this.$element[0].tagName === 'INPUT') {\r\n        var delimiter = (self.options.delimiterRegex) ? self.options.delimiterRegex : self.options.delimiter;\r\n        var items = item.split(delimiter);\r\n        if (items.length > 1) {\r\n          for (var i = 0; i < items.length; i++) {\r\n            this.add(items[i], true);\r\n          }\r\n\r\n          if (!dontPushVal)\r\n            self.pushVal(self.options.triggerChange);\r\n          return;\r\n        }\r\n      }\r\n\r\n      var itemValue = self.options.itemValue(item),\r\n          itemText = self.options.itemText(item),\r\n          tagClass = self.options.tagClass(item),\r\n          itemTitle = self.options.itemTitle(item);\r\n\r\n      // Ignore items allready added\r\n      var existing = langx.grep(self.itemsArray, function(item) { return self.options.itemValue(item) === itemValue; } )[0];\r\n      if (existing && !self.options.allowDuplicates) {\r\n        // Invoke onTagExists\r\n        if (self.options.onTagExists) {\r\n          var $existingTag = $(\".tag\", self.$container).filter(function() { return $(this).data(\"item\") === existing; });\r\n          self.options.onTagExists(item, $existingTag);\r\n        }\r\n        return;\r\n      }\r\n\r\n      // if length greater than limit\r\n      if (self.items().toString().length + item.length + 1 > self.options.maxInputLength)\r\n        return;\r\n\r\n      // raise beforeItemAdd arg\r\n      var beforeItemAddEvent = eventer.create('beforeItemAdd', { item: item, cancel: false, options: options});\r\n      self.$element.trigger(beforeItemAddEvent);\r\n      if (beforeItemAddEvent.cancel)\r\n        return;\r\n\r\n      // register item in internal array and map\r\n      self.itemsArray.push(item);\r\n\r\n      // add a tag element\r\n\r\n      var $tag = $('<span class=\"tag ' + htmlEncode(tagClass) + (itemTitle !== null ? ('\" title=\"' + itemTitle) : '') + '\">' + htmlEncode(itemText) + '<span data-role=\"remove\"></span></span>');\r\n      $tag.data('item', item);\r\n      self.findInputWrapper().before($tag);\r\n      $tag.after(' ');\r\n\r\n      // Check to see if the tag exists in its raw or uri-encoded form\r\n      var optionExists = (\r\n        $('option[value=\"' + encodeURIComponent(itemValue) + '\"]', self.$element).length ||\r\n        $('option[value=\"' + htmlEncode(itemValue) + '\"]', self.$element).length\r\n      );\r\n\r\n      // add <option /> if item represents a value not present in one of the <select />'s options\r\n      if (self.isSelect && !optionExists) {\r\n        var $option = $('<option selected>' + htmlEncode(itemText) + '</option>');\r\n        $option.data('item', item);\r\n        $option.attr('value', itemValue);\r\n        self.$element.append($option);\r\n      }\r\n\r\n      if (!dontPushVal)\r\n        self.pushVal(self.options.triggerChange);\r\n\r\n      // Add class when reached maxTags\r\n      if (self.options.maxTags === self.itemsArray.length || self.items().toString().length === self.options.maxInputLength)\r\n        self.$container.addClass('bootstrap-tagsinput-max');\r\n\r\n      // If using typeahead, once the tag has been added, clear the typeahead value so it does not stick around in the input.\r\n      if ($('.typeahead, .twitter-typeahead', self.$container).length) {\r\n        self.$input.typeahead('val', '');\r\n      }\r\n\r\n      if (this.isInit) {\r\n        self.$element.trigger(eventer.create('itemAddedOnInit', { item: item, options: options }));\r\n      } else {\r\n        self.$element.trigger(eventer.create('itemAdded', { item: item, options: options }));\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Removes the given item. Pass true to dontPushVal to prevent updating the\r\n     * elements val()\r\n     */\r\n    remove: function(item, dontPushVal, options) {\r\n      var self = this;\r\n\r\n      if (self.objectItems) {\r\n        if (typeof item === \"object\")\r\n          item = langx.grep(self.itemsArray, function(other) { return self.options.itemValue(other) ==  self.options.itemValue(item); } );\r\n        else\r\n          item = langx.grep(self.itemsArray, function(other) { return self.options.itemValue(other) ==  item; } );\r\n\r\n        item = item[item.length-1];\r\n      }\r\n\r\n      if (item) {\r\n        var beforeItemRemoveEvent = eventer.create('beforeItemRemove', { item: item, cancel: false, options: options });\r\n        self.$element.trigger(beforeItemRemoveEvent);\r\n        if (beforeItemRemoveEvent.cancel)\r\n          return;\r\n\r\n        $('.tag', self.$container).filter(function() { return $(this).data('item') === item; }).remove();\r\n        $('option', self.$element).filter(function() { return $(this).data('item') === item; }).remove();\r\n        if(langx.inArray(item, self.itemsArray) !== -1)\r\n          self.itemsArray.splice(langx.inArray(item, self.itemsArray), 1);\r\n      }\r\n\r\n      if (!dontPushVal)\r\n        self.pushVal(self.options.triggerChange);\r\n\r\n      // Remove class when reached maxTags\r\n      if (self.options.maxTags > self.itemsArray.length)\r\n        self.$container.removeClass('bootstrap-tagsinput-max');\r\n\r\n      self.$element.trigger(eventer.create('itemRemoved',  { item: item, options: options }));\r\n    },\r\n\r\n    /**\r\n     * Removes all items\r\n     */\r\n    removeAll: function() {\r\n      var self = this;\r\n\r\n      $('.tag', self.$container).remove();\r\n      $('option', self.$element).remove();\r\n\r\n      while(self.itemsArray.length > 0)\r\n        self.itemsArray.pop();\r\n\r\n      self.pushVal(self.options.triggerChange);\r\n    },\r\n\r\n    /**\r\n     * Refreshes the tags so they match the text/value of their corresponding\r\n     * item.\r\n     */\r\n    refresh: function() {\r\n      var self = this;\r\n      $('.tag', self.$container).each(function() {\r\n        var $tag = $(this),\r\n            item = $tag.data('item'),\r\n            itemValue = self.options.itemValue(item),\r\n            itemText = self.options.itemText(item),\r\n            tagClass = self.options.tagClass(item);\r\n\r\n          // Update tag's class and inner text\r\n          $tag.attr('class', null);\r\n          $tag.addClass('tag ' + htmlEncode(tagClass));\r\n          $tag.contents().filter(function() {\r\n            return this.nodeType == 3;\r\n          })[0].nodeValue = htmlEncode(itemText);\r\n\r\n          if (self.isSelect) {\r\n            var option = $('option', self.$element).filter(function() { return $(this).data('item') === item; });\r\n            option.attr('value', itemValue);\r\n          }\r\n      });\r\n    },\r\n\r\n    /**\r\n     * Returns the items added as tags\r\n     */\r\n    items: function() {\r\n      return this.itemsArray;\r\n    },\r\n\r\n    /**\r\n     * Assembly value by retrieving the value of each item, and set it on the\r\n     * element.\r\n     */\r\n    pushVal: function() {\r\n      var self = this,\r\n          val = langx.map(self.items(), function(item) {\r\n            return self.options.itemValue(item).toString();\r\n          });\r\n\r\n      self.$element.val(val, true);\r\n\r\n      if (self.options.triggerChange)\r\n        self.$element.trigger('change');\r\n    },\r\n\r\n    /**\r\n     * Initializes the tags input behaviour on the element\r\n     */\r\n    build: function(options) {\r\n      var self = this;\r\n\r\n      //self.options = $.extend({}, defaultOptions, options);\r\n\r\n      // When itemValue is set, freeInput should always be false\r\n      if (self.objectItems)\r\n        self.options.freeInput = false;\r\n\r\n      makeOptionItemFunction(self.options, 'itemValue');\r\n      makeOptionItemFunction(self.options, 'itemText');\r\n      makeOptionFunction(self.options, 'tagClass');\r\n\r\n      // Typeahead Bootstrap version 2.3.2\r\n      if (self.options.typeahead) {\r\n        var typeahead = self.options.typeahead || {};\r\n\r\n        makeOptionFunction(typeahead, 'source');\r\n\r\n        self.$input.typeahead(langx.extend({}, typeahead, {\r\n          source: function (query, process) {\r\n            function processItems(items) {\r\n              var texts = [];\r\n\r\n              for (var i = 0; i < items.length; i++) {\r\n                var text = self.options.itemText(items[i]);\r\n                map[text] = items[i];\r\n                texts.push(text);\r\n              }\r\n              process(texts);\r\n            }\r\n\r\n            this.map = {};\r\n            var map = this.map,\r\n                data = typeahead.source(query);\r\n\r\n            if (langx.isFunction(data.success)) {\r\n              // support for Angular callbacks\r\n              data.success(processItems);\r\n            } else if (langx.isFunction(data.then)) {\r\n              // support for Angular promises\r\n              data.then(processItems);\r\n            } else {\r\n              // support for functions and jquery promises\r\n              langx.Deferred.when(data)\r\n               .then(processItems);\r\n            }\r\n          },\r\n          updater: function (text) {\r\n            self.add(this.map[text]);\r\n            return this.map[text];\r\n          },\r\n          matcher: function (text) {\r\n            return (text.toLowerCase().indexOf(this.query.trim().toLowerCase()) !== -1);\r\n          },\r\n          sorter: function (texts) {\r\n            return texts.sort();\r\n          },\r\n          highlighter: function (text) {\r\n            var regex = new RegExp( '(' + this.query + ')', 'gi' );\r\n            return text.replace( regex, \"<strong>$1</strong>\" );\r\n          }\r\n        }));\r\n      }\r\n\r\n      // typeahead.js\r\n      if (self.options.typeaheadjs) {\r\n        // Determine if main configurations were passed or simply a dataset\r\n        var typeaheadjs = self.options.typeaheadjs;\r\n        if (!langx.isArray(typeaheadjs)) {\r\n            typeaheadjs = [null, typeaheadjs];\r\n        }\r\n\r\n        $.fn.typeahead.apply(self.$input, typeaheadjs).on('typeahead:selected', langx.proxy(function (obj, datum, name) {\r\n          var index = 0;\r\n          typeaheadjs.some(function(dataset, _index) {\r\n            if (dataset.name === name) {\r\n              index = _index;\r\n              return true;\r\n            }\r\n            return false;\r\n          });\r\n\r\n          // @TODO Dep: https://github.com/corejavascript/typeahead.js/issues/89\r\n          if (typeaheadjs[index].valueKey) {\r\n            self.add(datum[typeaheadjs[index].valueKey]);\r\n          } else {\r\n            self.add(datum);\r\n          }\r\n\r\n          self.$input.typeahead('val', '');\r\n        }, self));\r\n      }\r\n\r\n      self.$container.on('click', langx.proxy(function(event) {\r\n        if (! self.$element.attr('disabled')) {\r\n          self.$input.removeAttr('disabled');\r\n        }\r\n        self.$input.focus();\r\n      }, self));\r\n\r\n        if (self.options.addOnBlur && self.options.freeInput) {\r\n          self.$input.on('focusout', langx.proxy(function(event) {\r\n              // HACK: only process on focusout when no typeahead opened, to\r\n              //       avoid adding the typeahead text as tag\r\n              if ($('.typeahead, .twitter-typeahead', self.$container).length === 0) {\r\n                self.add(self.$input.val());\r\n                self.$input.val('');\r\n              }\r\n          }, self));\r\n        }\r\n\r\n      // Toggle the 'focus' css class on the container when it has focus\r\n      self.$container.on({\r\n        focusin: function() {\r\n          self.$container.addClass(self.options.focusClass);\r\n        },\r\n        focusout: function() {\r\n          self.$container.removeClass(self.options.focusClass);\r\n        },\r\n      });\r\n\r\n      self.$container.on('keydown', 'input', langx.proxy(function(event) {\r\n        var $input = $(event.target),\r\n            $inputWrapper = self.findInputWrapper();\r\n\r\n        if (self.$element.attr('disabled')) {\r\n          self.$input.attr('disabled', 'disabled');\r\n          return;\r\n        }\r\n\r\n        switch (event.which) {\r\n          // BACKSPACE\r\n          case 8:\r\n            if (doGetCaretPosition($input[0]) === 0) {\r\n              var prev = $inputWrapper.prev();\r\n              if (prev.length) {\r\n                self.remove(prev.data('item'));\r\n              }\r\n            }\r\n            break;\r\n\r\n          // DELETE\r\n          case 46:\r\n            if (doGetCaretPosition($input[0]) === 0) {\r\n              var next = $inputWrapper.next();\r\n              if (next.length) {\r\n                self.remove(next.data('item'));\r\n              }\r\n            }\r\n            break;\r\n\r\n          // LEFT ARROW\r\n          case 37:\r\n            // Try to move the input before the previous tag\r\n            var $prevTag = $inputWrapper.prev();\r\n            if ($input.val().length === 0 && $prevTag[0]) {\r\n              $prevTag.before($inputWrapper);\r\n              $input.focus();\r\n            }\r\n            break;\r\n          // RIGHT ARROW\r\n          case 39:\r\n            // Try to move the input after the next tag\r\n            var $nextTag = $inputWrapper.next();\r\n            if ($input.val().length === 0 && $nextTag[0]) {\r\n              $nextTag.after($inputWrapper);\r\n              $input.focus();\r\n            }\r\n            break;\r\n         default:\r\n             // ignore\r\n         }\r\n\r\n        // Reset internal input's size\r\n        var textLength = $input.val().length,\r\n            wordSpace = Math.ceil(textLength / 5),\r\n            size = textLength + wordSpace + 1;\r\n        $input.attr('size', Math.max(this.inputSize, $input.val().length));\r\n      }, self));\r\n\r\n      self.$container.on('keypress', 'input', langx.proxy(function(event) {\r\n         var $input = $(event.target);\r\n\r\n         if (self.$element.attr('disabled')) {\r\n            self.$input.attr('disabled', 'disabled');\r\n            return;\r\n         }\r\n\r\n         var text = $input.val(),\r\n         maxLengthReached = self.options.maxChars && text.length >= self.options.maxChars;\r\n         if (self.options.freeInput && (keyCombinationInList(event, self.options.confirmKeys) || maxLengthReached)) {\r\n            // Only attempt to add a tag if there is data in the field\r\n            if (text.length !== 0) {\r\n               self.add(maxLengthReached ? text.substr(0, self.options.maxChars) : text);\r\n               $input.val('');\r\n            }\r\n\r\n            // If the field is empty, let the event triggered fire as usual\r\n            if (self.options.cancelConfirmKeysOnEmpty === false) {\r\n                event.preventDefault();\r\n            }\r\n         }\r\n\r\n         // Reset internal input's size\r\n         var textLength = $input.val().length,\r\n            wordSpace = Math.ceil(textLength / 5),\r\n            size = textLength + wordSpace + 1;\r\n         $input.attr('size', Math.max(this.inputSize, $input.val().length));\r\n      }, self));\r\n\r\n      // Remove icon clicked\r\n      self.$container.on('click', '[data-role=remove]', langx.proxy(function(event) {\r\n        if (self.$element.attr('disabled')) {\r\n          return;\r\n        }\r\n        self.remove($(event.target).closest('.tag').data('item'));\r\n      }, self));\r\n\r\n      // Only add existing value as tags when using strings as tags\r\n      if (self.options.itemValue === defaultOptions.itemValue) {\r\n        if (self.$element[0].tagName === 'INPUT') {\r\n            self.add(self.$element.val());\r\n        } else {\r\n          $('option', self.$element).each(function() {\r\n            self.add($(this).attr('value'), true);\r\n          });\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Removes all tagsinput behaviour and unregsiter all event handlers\r\n     */\r\n    destroy: function() {\r\n      var self = this;\r\n\r\n      // Unbind events\r\n      self.$container.off('keypress', 'input');\r\n      self.$container.off('click', '[role=remove]');\r\n\r\n      self.$container.remove();\r\n      self.$element.removeData('tagsinput');\r\n      self.$element.show();\r\n    },\r\n\r\n    /**\r\n     * Sets focus on the tagsinput\r\n     */\r\n    focus: function() {\r\n      this.$input.focus();\r\n    },\r\n\r\n    /**\r\n     * Returns the internal input element\r\n     */\r\n    input: function() {\r\n      return this.$input;\r\n    },\r\n\r\n    /**\r\n     * Returns the element which is wrapped around the internal input. This\r\n     * is normally the $container, but typeahead.js moves the $input element.\r\n     */\r\n    findInputWrapper: function() {\r\n      var elt = this.$input[0],\r\n          container = this.$container[0];\r\n      while(elt && elt.parentNode !== container)\r\n        elt = elt.parentNode;\r\n\r\n      return $(elt);\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Register JQuery plugin\r\n   */\r\n  $.fn.tagsinput = function(arg1, arg2, arg3) {\r\n    var results = [];\r\n\r\n    this.each(function() {\r\n      var tagsinput = $(this).data('tagsinput');\r\n      // Initialize a new tags input\r\n      if (!tagsinput) {\r\n          tagsinput = new TagsInput(this, arg1);\r\n          $(this).data('tagsinput', tagsinput);\r\n          results.push(tagsinput);\r\n\r\n          if (this.tagName === 'SELECT') {\r\n              $('option', $(this)).attr('selected', 'selected');\r\n          }\r\n\r\n          // Init tags from $(this).val()\r\n          $(this).val($(this).val());\r\n      } else if (!arg1 && !arg2) {\r\n          // tagsinput already exists\r\n          // no function, trying to init\r\n          results.push(tagsinput);\r\n      } else if(tagsinput[arg1] !== undefined) {\r\n          // Invoke function on existing tags input\r\n            if(tagsinput[arg1].length === 3 && arg3 !== undefined){\r\n               var retVal = tagsinput[arg1](arg2, null, arg3);\r\n            }else{\r\n               var retVal = tagsinput[arg1](arg2);\r\n            }\r\n          if (retVal !== undefined)\r\n              results.push(retVal);\r\n      }\r\n    });\r\n\r\n    if ( typeof arg1 == 'string') {\r\n      // Return the results from the invoked function calls\r\n      return results.length > 1 ? results : results[0];\r\n    } else {\r\n      return results;\r\n    }\r\n  };\r\n\r\n  $.fn.tagsinput.Constructor = TagsInput;\r\n\r\n  /**\r\n   * Most options support both a string or number as well as a function as\r\n   * option value. This function makes sure that the option with the given\r\n   * key in the given options is wrapped in a function\r\n   */\r\n  function makeOptionItemFunction(options, key) {\r\n    if (typeof options[key] !== 'function') {\r\n      var propertyName = options[key];\r\n      options[key] = function(item) { return item[propertyName]; };\r\n    }\r\n  }\r\n  function makeOptionFunction(options, key) {\r\n    if (typeof options[key] !== 'function') {\r\n      var value = options[key];\r\n      options[key] = function() { return value; };\r\n    }\r\n  }\r\n  /**\r\n   * HtmlEncodes the given value\r\n   */\r\n  var htmlEncodeContainer = $('<div />');\r\n  function htmlEncode(value) {\r\n    if (value) {\r\n      return htmlEncodeContainer.text(value).html();\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns the position of the caret in the given input field\r\n   * http://flightschool.acylt.com/devnotes/caret-position-woes/\r\n   */\r\n  function doGetCaretPosition(oField) {\r\n    var iCaretPos = 0;\r\n    if (document.selection) {\r\n      oField.focus ();\r\n      var oSel = document.selection.createRange();\r\n      oSel.moveStart ('character', -oField.value.length);\r\n      iCaretPos = oSel.text.length;\r\n    } else if (oField.selectionStart || oField.selectionStart == '0') {\r\n      iCaretPos = oField.selectionStart;\r\n    }\r\n    return (iCaretPos);\r\n  }\r\n\r\n  /**\r\n    * Returns boolean indicates whether user has pressed an expected key combination.\r\n    * @param object keyPressEvent: JavaScript event object, refer\r\n    *     http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\r\n    * @param object lookupList: expected key combinations, as in:\r\n    *     [13, {which: 188, shiftKey: true}]\r\n    */\r\n  function keyCombinationInList(keyPressEvent, lookupList) {\r\n      var found = false;\r\n      langx.each(lookupList, function (index, keyCombination) {\r\n          if (typeof (keyCombination) === 'number' && keyPressEvent.which === keyCombination) {\r\n              found = true;\r\n              return false;\r\n          }\r\n\r\n          if (keyPressEvent.which === keyCombination.which) {\r\n              var alt = !keyCombination.hasOwnProperty('altKey') || keyPressEvent.altKey === keyCombination.altKey,\r\n                  shift = !keyCombination.hasOwnProperty('shiftKey') || keyPressEvent.shiftKey === keyCombination.shiftKey,\r\n                  ctrl = !keyCombination.hasOwnProperty('ctrlKey') || keyPressEvent.ctrlKey === keyCombination.ctrlKey;\r\n              if (alt && shift && ctrl) {\r\n                  found = true;\r\n                  return false;\r\n              }\r\n          }\r\n      });\r\n\r\n      return found;\r\n  }\r\n\r\n  return TagsInput;\r\n\r\n});"]}