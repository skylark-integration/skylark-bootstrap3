{"version":3,"sources":["collapse.js"],"names":["define","langx","browser","eventer","noder","geom","$","plugins","bs3","Collapse","Plugin","inherit","klassName","pluginName","options","toggle","_construct","element","this","overrided","$element","$trigger","id","transitioning","parent","$parent","getParent","addAriaAndCollapsedClass","dimension","hasClass","show","activesData","actives","children","length","data","startEvent","create","trigger","isDefaultPrevented","collapse","hide","removeClass","addClass","attr","complete","support","transition","call","scrollSize","camelCase","join","one","proxy","emulateTransitionEnd","TRANSITION_DURATION","offsetHeight","find","each","i","href","target","replace","end","isOpen","toggleClass","VERSION","DEFAULTS","register","fn","option","$this","plugin","instantiate","mixin","test"],"mappings":"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","file":"../collapse.js","sourcesContent":["define([\n    \"skylark-langx/langx\",\n    \"skylark-utils-dom/browser\",\n    \"skylark-utils-dom/eventer\",\n    \"skylark-utils-dom/noder\",\n    \"skylark-utils-dom/geom\",\n    \"skylark-utils-dom/query\",\n    \"skylark-utils-dom/plugins\",\n    \"./bs3\",\n    \"./transition\"\n], function(langx, browser, eventer, noder, geom, $, plugins, bs3) {\n\n\n/* ========================================================================\n * Bootstrap: collapse.js v3.3.7\n * http://getbootstrap.com/javascript/#collapse\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n/* jshint latedef: false */\n\n  'use strict';\n\n  // COLLAPSE PUBLIC CLASS DEFINITION\n  // ================================\n\n  var Collapse = bs3.Collapse = plugins.Plugin.inherit({\n    klassName: \"Collapse\",\n\n    pluginName : \"bs3.collapse\",\n\n    options : {\n      toggle: true\n    },\n\n    _construct : function(element,options) {\n      //this.options       = langx.mixin({}, Collapse.DEFAULTS, options)\n      this.overrided(element,options);\n\n      this.$element      = $(element)\n      this.$trigger      = $('[data-toggle=\"collapse\"][href=\"#' + element.id + '\"],' +\n                             '[data-toggle=\"collapse\"][data-target=\"#' + element.id + '\"]')\n      this.transitioning = null\n\n      if (this.options.parent) {\n        this.$parent = this.getParent()\n      } else {\n        this.addAriaAndCollapsedClass(this.$element, this.$trigger)\n      }\n\n      if (this.options.toggle) {\n        this.toggle();\n      }\n    },\n\n    dimension : function () {\n      var hasWidth = this.$element.hasClass('width')\n      return hasWidth ? 'width' : 'height'\n    },\n\n    show : function () {\n      if (this.transitioning || this.$element.hasClass('in')) return\n\n      var activesData\n      var actives = this.$parent && this.$parent.children('.panel').children('.in, .collapsing')\n\n      if (actives && actives.length) {\n        activesData = actives.data('bs.collapse')\n        if (activesData && activesData.transitioning) return\n      }\n\n      var startEvent = eventer.create('show.bs.collapse')\n      this.$element.trigger(startEvent)\n      if (startEvent.isDefaultPrevented()) return\n\n      if (actives && actives.length) {\n        //Plugin.call(actives, 'hide')\n        actives.collapse().hide();\n        activesData || actives.data('bs.collapse', null)\n      }\n\n      var dimension = this.dimension()\n\n      this.$element\n        .removeClass('collapse')\n        .addClass('collapsing')[dimension](0)\n        .attr('aria-expanded', true)\n\n      this.$trigger\n        .removeClass('collapsed')\n        .attr('aria-expanded', true)\n\n      this.transitioning = 1\n\n      var complete = function () {\n        this.$element\n          .removeClass('collapsing')\n          .addClass('collapse in')[dimension]('')\n        this.transitioning = 0\n        this.$element\n          .trigger('shown.bs.collapse')\n      }\n\n      if (!browser.support.transition) return complete.call(this)\n\n      var scrollSize = langx.camelCase(['scroll', dimension].join('-'))\n\n      this.$element\n        .one('transitionEnd', langx.proxy(complete, this))\n        .emulateTransitionEnd(Collapse.TRANSITION_DURATION)[dimension](this.$element[0][scrollSize])\n    },\n\n    hide : function () {\n      if (this.transitioning || !this.$element.hasClass('in')) return\n\n      var startEvent = eventer.create('hide.bs.collapse')\n      this.$element.trigger(startEvent)\n      if (startEvent.isDefaultPrevented()) return\n\n      var dimension = this.dimension()\n\n      this.$element[dimension](this.$element[dimension]())[0].offsetHeight\n\n      this.$element\n        .addClass('collapsing')\n        .removeClass('collapse in')\n        .attr('aria-expanded', false)\n\n      this.$trigger\n        .addClass('collapsed')\n        .attr('aria-expanded', false)\n\n      this.transitioning = 1\n\n      var complete = function () {\n        this.transitioning = 0\n        this.$element\n          .removeClass('collapsing')\n          .addClass('collapse')\n          .trigger('hidden.bs.collapse')\n      }\n\n      if (!browser.support.transition) return complete.call(this)\n\n      this.$element\n        [dimension](0)\n        .one('transitionEnd', langx.proxy(complete, this))\n        .emulateTransitionEnd(Collapse.TRANSITION_DURATION)\n    },\n\n    toggle : function () {\n      this[this.$element.hasClass('in') ? 'hide' : 'show']()\n    },\n\n    getParent : function () {\n      return $(this.options.parent)\n        .find('[data-toggle=\"collapse\"][data-parent=\"' + this.options.parent + '\"]')\n        .each(langx.proxy(function (i, element) {\n          var $element = $(element)\n          this.addAriaAndCollapsedClass(getTargetFromTrigger($element), $element)\n        }, this))\n        .end()\n    },\n\n    addAriaAndCollapsedClass : function ($element, $trigger) {\n      var isOpen = $element.hasClass('in')\n\n      $element.attr('aria-expanded', isOpen)\n      $trigger\n        .toggleClass('collapsed', !isOpen)\n        .attr('aria-expanded', isOpen)\n    }\n\n  });\n\n  Collapse.VERSION  = '3.3.7'\n\n  Collapse.TRANSITION_DURATION = 350\n\n  Collapse.DEFAULTS = {\n    toggle: true\n  }\n\n\n  function getTargetFromTrigger($trigger) {\n    var href\n    var target = $trigger.attr('data-target')\n      || (href = $trigger.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '') // strip for ie7\n\n    return $(target)\n  }\n\n\n  // COLLAPSE PLUGIN DEFINITION\n  // ==========================\n\n  /*\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.collapse')\n      var options = langx.mixin({}, Collapse.DEFAULTS, $this.data(), typeof option == 'object' && option)\n\n      if (!data && options.toggle && /show|hide/.test(option)) options.toggle = false\n      if (!data) $this.data('bs.collapse', (data = new Collapse(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.collapse\n\n  $.fn.collapse             = Plugin;\n  $.fn.collapse.Constructor = Collapse;\n\n  // COLLAPSE NO CONFLICT\n  // ====================\n\n  $.fn.collapse.noConflict = function () {\n    $.fn.collapse = old\n    return this\n  }\n  */\n\n  plugins.register(Collapse);\n\n  $.fn.collapse = function(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var plugin    = plugins.instantiate(this,'bs3.collapse',\"instance\");\n      var options = langx.mixin({}, Collapse.DEFAULTS, $this.data(), typeof option == 'object' && option)\n\n      if (!plugin && options.toggle && /show|hide/.test(option)) options.toggle = false\n      if (!plugin) {\n          plugin = plugins.instantiate(this,'bs3.collapse',options);\n      }\n      if (typeof option == 'string') plugin[option]()\n    });\n  };\n\n  return Collapse;\n\n});\n"]}