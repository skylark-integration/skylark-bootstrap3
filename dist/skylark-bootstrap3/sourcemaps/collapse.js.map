{"version":3,"sources":["collapse.js"],"names":["define","langx","browser","eventer","noder","geom","$","plugins","_Collapse","bs3","Collapse","inherit","klassName","pluginName","_construct","element","options","mixin","data","this","$trigger","id","parent","$parent","getParent","addAriaAndCollapsedClass","overrided","show","activesData","actives","children","length","transitioning","collapse","removeClass","attr","hide","addClass","find","each","proxy","i","href","target","$element","replace","end","isOpen","hasClass","toggleClass","VERSION","register"],"mappings":";;;;;;;AAAAA,QACI,sBACA,uBACA,uBACA,qBACA,oBACA,qBACA,4BACA,wCACD,QACC,gBACD,SAASC,EAAOC,EAASC,EAASC,EAAOC,EAAMC,EAAGC,EAAQC,EAAWC,GAatE,aAKA,IAAIC,EAAWD,EAAIC,SAAWF,EAAUG,SACtCC,UAAW,WAEXC,WAAa,eAEbC,WAAa,SAASC,EAAQC,GAC5BA,EAAUf,EAAMgB,SAAUX,EAAES,GAASG,OAAQF,GAC7CG,KAAKC,SAAgBd,EAAE,mCAAqCS,EAAQM,GAAK,6CACNN,EAAQM,GAAK,MAG5EL,EAAQM,OACVH,KAAKI,QAAUJ,KAAKK,UAAUR,GAE9BG,KAAKM,yBAAyBnB,EAAES,GAAUI,KAAKC,UAGjDD,KAAKO,UAAUX,EAAQC,IASzBW,KAAO,WAGL,IAAIC,EACAC,EAAUV,KAAKI,SAAWJ,KAAKI,QAAQO,SAAS,UAAUA,SAAS,oBAEnED,GAAWA,EAAQE,SACrBH,EAAcC,EAAQX,KAAK,iBACRU,EAAYI,gBAO7BH,GAAWA,EAAQE,SAErBF,EAAQI,SAAS,QACjBL,GAAeC,EAAQX,KAAK,cAAe,OAU7CC,KAAKO,YAELP,KAAKC,SACFc,YAAY,aACZC,KAAK,iBAAiB,KAsB3BC,KAAO,WAgBLjB,KAAKO,YACLP,KAAKC,SACFiB,SAAS,aACTF,KAAK,iBAAiB,IAqB3BX,UAAY,SAAUR,GAEpB,OADAA,EAAUA,GAAWG,KAAKH,QACnBV,EAAEU,EAAQM,QACdgB,KAAK,yCAA2CtB,EAAQM,OAAS,MACjEiB,KAAKtC,EAAMuC,MAAM,SAAUC,EAAG1B,GAC7B,IAoBsBK,EACxBsB,EACAC,EAtBMC,EAAWtC,EAAES,GACjBI,KAAKM,0BAqBPkB,GAFwBvB,EAnB6BwB,GAqBnCT,KAAK,iBACrBO,EAAOtB,EAASe,KAAK,UAAYO,EAAKG,QAAQ,iBAAkB,IAE/DvC,EAAEqC,IAxB2DC,IAC7DzB,OACF2B,OAGLrB,yBAA2B,SAAUmB,EAAUxB,GAC7C,IAAI2B,EAASH,EAASI,SAAS,MAE/BJ,EAAST,KAAK,gBAAiBY,GAC/B3B,EACG6B,YAAY,aAAcF,GAC1BZ,KAAK,gBAAiBY,MAiD7B,OA5CArC,EAASwC,QAAW,QA0CpB3C,EAAQ4C,SAASzC,EAAS,YAEnBA","file":"../collapse.js","sourcesContent":["define([\n    \"skylark-langx/langx\",\n    \"skylark-domx-browser\",\n    \"skylark-domx-eventer\",\n    \"skylark-domx-noder\",\n    \"skylark-domx-geom\",\n    \"skylark-domx-query\",\n    \"skylark-domx-plugins-base\",\n    \"skylark-domx-plugins-toggles/collapse\",\n   \"./bs3\",\n    \"./transition\"\n], function(langx, browser, eventer, noder, geom, $, plugins,_Collapse, bs3) {\n\n\n/* ========================================================================\n * Bootstrap: collapse.js v3.3.7\n * http://getbootstrap.com/javascript/#collapse\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n/* jshint latedef: false */\n\n  'use strict';\n\n  // COLLAPSE PUBLIC CLASS DEFINITION\n  // ================================\n\n  var Collapse = bs3.Collapse = _Collapse.inherit({\n    klassName: \"Collapse\",\n\n    pluginName : \"bs3.collapse\",\n\n    _construct : function(element,options) {\n      options = langx.mixin({}, $(element).data(), options)\n      this.$trigger      = $('[data-toggle=\"collapse\"][href=\"#' + element.id + '\"],' +\n                             '[data-toggle=\"collapse\"][data-target=\"#' + element.id + '\"]')\n      //this.transitioning = null\n\n      if (options.parent) {\n        this.$parent = this.getParent(options)\n      } else {\n        this.addAriaAndCollapsedClass($(element), this.$trigger)\n      }\n\n      this.overrided(element,options);\n      //this.$element      = $(element)\n\n      //if (this.options.toggle) {\n      //  this.toggle();\n      //}\n    },\n\n\n    show : function () {\n      //if (this.transitioning || this.$element.hasClass('in')) return\n\n      var activesData\n      var actives = this.$parent && this.$parent.children('.panel').children('.in, .collapsing')\n\n      if (actives && actives.length) {\n        activesData = actives.data('bs.collapse')\n        if (activesData && activesData.transitioning) return\n      }\n\n      //var startEvent = eventer.create('show.bs.collapse')\n      //this.$element.trigger(startEvent)\n      //if (startEvent.isDefaultPrevented()) return\n\n      if (actives && actives.length) {\n        //Plugin.call(actives, 'hide')\n        actives.collapse(\"hide\");\n        activesData || actives.data('bs.collapse', null)\n      }\n\n      //var dimension = this.dimension()\n\n      //this.$element\n      //  .removeClass('collapse')\n      //  .addClass('collapsing')[dimension](0)\n      //  .attr('aria-expanded', true)\n\n      this.overrided(); //add\n\n      this.$trigger\n        .removeClass('collapsed')\n        .attr('aria-expanded', true)\n\n      //this.transitioning = 1\n\n      //var complete = function () {\n      //  this.$element\n      //    .removeClass('collapsing')\n      //    .addClass('collapse in')[dimension]('')\n      //  this.transitioning = 0\n      //  this.$element\n      //    .trigger('shown.bs.collapse')\n      //}\n\n      //if (!browser.support.transition) return complete.call(this)\n\n      //var scrollSize = langx.camelCase(['scroll', dimension].join('-'))\n\n      //this.$element\n      //  .one('transitionEnd', langx.proxy(complete, this))\n      //  .emulateTransitionEnd(Collapse.TRANSITION_DURATION)[dimension](this.$element[0][scrollSize])\n    },\n\n    hide : function () {\n      //if (this.transitioning || !this.$element.hasClass('in')) return\n\n      //var startEvent = eventer.create('hide.bs.collapse')\n      //this.$element.trigger(startEvent)\n      //if (startEvent.isDefaultPrevented()) return\n\n      //var dimension = this.dimension()\n\n      //this.$element[dimension](this.$element[dimension]())[0].offsetHeight\n\n      //this.$element\n      //  .addClass('collapsing')\n      //  .removeClass('collapse in')\n      //  .attr('aria-expanded', false)\n\n      this.overrided();\n      this.$trigger\n        .addClass('collapsed')\n        .attr('aria-expanded', false)\n\n      //this.transitioning = 1\n\n      //var complete = function () {\n      //  this.transitioning = 0\n      //  this.$element\n      //    .removeClass('collapsing')\n      //    .addClass('collapse')\n      //    .trigger('hidden.bs.collapse')\n      //}\n\n      //if (!browser.support.transition) return complete.call(this)\n\n      //this.$element\n      //  [dimension](0)\n      //  .one('transitionEnd', langx.proxy(complete, this))\n      //  .emulateTransitionEnd(Collapse.TRANSITION_DURATION)\n    },\n\n\n    getParent : function (options) {\n      options = options || this.options;\n      return $(options.parent)\n        .find('[data-toggle=\"collapse\"][data-parent=\"' + options.parent + '\"]')\n        .each(langx.proxy(function (i, element) {\n          var $element = $(element)\n          this.addAriaAndCollapsedClass(getTargetFromTrigger($element), $element)\n        }, this))\n        .end()\n    },\n\n    addAriaAndCollapsedClass : function ($element, $trigger) {\n      var isOpen = $element.hasClass('in')\n\n      $element.attr('aria-expanded', isOpen)\n      $trigger\n        .toggleClass('collapsed', !isOpen)\n        .attr('aria-expanded', isOpen)\n    }\n\n  });\n\n  Collapse.VERSION  = '3.3.7'\n\n\n  function getTargetFromTrigger($trigger) {\n    var href\n    var target = $trigger.attr('data-target')\n      || (href = $trigger.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '') // strip for ie7\n\n    return $(target)\n  }\n\n\n  // COLLAPSE PLUGIN DEFINITION\n  // ==========================\n\n  /*\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.collapse')\n      var options = langx.mixin({}, Collapse.DEFAULTS, $this.data(), typeof option == 'object' && option)\n\n      if (!data && options.toggle && /show|hide/.test(option)) options.toggle = false\n      if (!data) $this.data('bs.collapse', (data = new Collapse(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.collapse\n\n  $.fn.collapse             = Plugin;\n  $.fn.collapse.Constructor = Collapse;\n\n  // COLLAPSE NO CONFLICT\n  // ====================\n\n  $.fn.collapse.noConflict = function () {\n    $.fn.collapse = old\n    return this\n  }\n  */\n\n  plugins.register(Collapse,\"collapse\");\n\n  return Collapse;\n\n});\n"]}