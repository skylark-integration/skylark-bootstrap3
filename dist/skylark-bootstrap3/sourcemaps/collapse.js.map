{"version":3,"sources":["collapse.js"],"names":["define","langx","browser","eventer","noder","geom","$","plugins","bs3","getTargetFromTrigger","$trigger","href","target","attr","replace","Collapse","Plugin","inherit","klassName","pluginName","options","toggle","_construct","element","this","overrided","$element","id","transitioning","parent","$parent","getParent","addAriaAndCollapsedClass","dimension","hasWidth","hasClass","show","activesData","actives","children","length","data","startEvent","create","trigger","isDefaultPrevented","collapse","hide","removeClass","addClass","complete","support","transition","call","scrollSize","camelCase","join","one","proxy","emulateTransitionEnd","TRANSITION_DURATION","offsetHeight","find","each","i","end","isOpen","toggleClass","VERSION","DEFAULTS","register"],"mappings":"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","file":"../collapse.js","sourcesContent":["define([\n    \"skylark-langx/langx\",\n    \"skylark-utils-dom/browser\",\n    \"skylark-utils-dom/eventer\",\n    \"skylark-utils-dom/noder\",\n    \"skylark-utils-dom/geom\",\n    \"skylark-utils-dom/query\",\n    \"skylark-utils-dom/plugins\",\n    \"./bs3\",\n    \"./transition\"\n], function(langx, browser, eventer, noder, geom, $, plugins, bs3) {\n\n\n/* ========================================================================\n * Bootstrap: collapse.js v3.3.7\n * http://getbootstrap.com/javascript/#collapse\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n/* jshint latedef: false */\n\n  'use strict';\n\n  // COLLAPSE PUBLIC CLASS DEFINITION\n  // ================================\n\n  var Collapse = bs3.Collapse = plugins.Plugin.inherit({\n    klassName: \"Collapse\",\n\n    pluginName : \"bs3.collapse\",\n\n    options : {\n      toggle: true\n    },\n\n    _construct : function(element,options) {\n      //this.options       = langx.mixin({}, Collapse.DEFAULTS, options)\n      this.overrided(element,options);\n\n      this.$element      = $(element)\n      this.$trigger      = $('[data-toggle=\"collapse\"][href=\"#' + element.id + '\"],' +\n                             '[data-toggle=\"collapse\"][data-target=\"#' + element.id + '\"]')\n      this.transitioning = null\n\n      if (this.options.parent) {\n        this.$parent = this.getParent()\n      } else {\n        this.addAriaAndCollapsedClass(this.$element, this.$trigger)\n      }\n\n      if (this.options.toggle) {\n        this.toggle();\n      }\n    },\n\n    dimension : function () {\n      var hasWidth = this.$element.hasClass('width')\n      return hasWidth ? 'width' : 'height'\n    },\n\n    show : function () {\n      if (this.transitioning || this.$element.hasClass('in')) return\n\n      var activesData\n      var actives = this.$parent && this.$parent.children('.panel').children('.in, .collapsing')\n\n      if (actives && actives.length) {\n        activesData = actives.data('bs.collapse')\n        if (activesData && activesData.transitioning) return\n      }\n\n      var startEvent = eventer.create('show.bs.collapse')\n      this.$element.trigger(startEvent)\n      if (startEvent.isDefaultPrevented()) return\n\n      if (actives && actives.length) {\n        //Plugin.call(actives, 'hide')\n        actives.collapse().hide();\n        activesData || actives.data('bs.collapse', null)\n      }\n\n      var dimension = this.dimension()\n\n      this.$element\n        .removeClass('collapse')\n        .addClass('collapsing')[dimension](0)\n        .attr('aria-expanded', true)\n\n      this.$trigger\n        .removeClass('collapsed')\n        .attr('aria-expanded', true)\n\n      this.transitioning = 1\n\n      var complete = function () {\n        this.$element\n          .removeClass('collapsing')\n          .addClass('collapse in')[dimension]('')\n        this.transitioning = 0\n        this.$element\n          .trigger('shown.bs.collapse')\n      }\n\n      if (!browser.support.transition) return complete.call(this)\n\n      var scrollSize = langx.camelCase(['scroll', dimension].join('-'))\n\n      this.$element\n        .one('transitionEnd', langx.proxy(complete, this))\n        .emulateTransitionEnd(Collapse.TRANSITION_DURATION)[dimension](this.$element[0][scrollSize])\n    },\n\n    hide : function () {\n      if (this.transitioning || !this.$element.hasClass('in')) return\n\n      var startEvent = eventer.create('hide.bs.collapse')\n      this.$element.trigger(startEvent)\n      if (startEvent.isDefaultPrevented()) return\n\n      var dimension = this.dimension()\n\n      this.$element[dimension](this.$element[dimension]())[0].offsetHeight\n\n      this.$element\n        .addClass('collapsing')\n        .removeClass('collapse in')\n        .attr('aria-expanded', false)\n\n      this.$trigger\n        .addClass('collapsed')\n        .attr('aria-expanded', false)\n\n      this.transitioning = 1\n\n      var complete = function () {\n        this.transitioning = 0\n        this.$element\n          .removeClass('collapsing')\n          .addClass('collapse')\n          .trigger('hidden.bs.collapse')\n      }\n\n      if (!browser.support.transition) return complete.call(this)\n\n      this.$element\n        [dimension](0)\n        .one('transitionEnd', langx.proxy(complete, this))\n        .emulateTransitionEnd(Collapse.TRANSITION_DURATION)\n    },\n\n    toggle : function () {\n      this[this.$element.hasClass('in') ? 'hide' : 'show']()\n    },\n\n    getParent : function () {\n      return $(this.options.parent)\n        .find('[data-toggle=\"collapse\"][data-parent=\"' + this.options.parent + '\"]')\n        .each(langx.proxy(function (i, element) {\n          var $element = $(element)\n          this.addAriaAndCollapsedClass(getTargetFromTrigger($element), $element)\n        }, this))\n        .end()\n    },\n\n    addAriaAndCollapsedClass : function ($element, $trigger) {\n      var isOpen = $element.hasClass('in')\n\n      $element.attr('aria-expanded', isOpen)\n      $trigger\n        .toggleClass('collapsed', !isOpen)\n        .attr('aria-expanded', isOpen)\n    }\n\n  });\n\n  Collapse.VERSION  = '3.3.7'\n\n  Collapse.TRANSITION_DURATION = 350\n\n  Collapse.DEFAULTS = {\n    toggle: true\n  }\n\n\n  function getTargetFromTrigger($trigger) {\n    var href\n    var target = $trigger.attr('data-target')\n      || (href = $trigger.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '') // strip for ie7\n\n    return $(target)\n  }\n\n\n  // COLLAPSE PLUGIN DEFINITION\n  // ==========================\n\n  /*\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.collapse')\n      var options = langx.mixin({}, Collapse.DEFAULTS, $this.data(), typeof option == 'object' && option)\n\n      if (!data && options.toggle && /show|hide/.test(option)) options.toggle = false\n      if (!data) $this.data('bs.collapse', (data = new Collapse(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.collapse\n\n  $.fn.collapse             = Plugin;\n  $.fn.collapse.Constructor = Collapse;\n\n  // COLLAPSE NO CONFLICT\n  // ====================\n\n  $.fn.collapse.noConflict = function () {\n    $.fn.collapse = old\n    return this\n  }\n  */\n\n  plugins.register(Collapse,\"collapse\");\n\n  return Collapse;\n\n});\n"]}